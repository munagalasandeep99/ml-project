name: ML API CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests # For the basic test script

      - name: Run basic API tests
        # This step assumes a local development server for testing. 
        # For a real pipeline, you would test the containerized app.
        run: |
          # A simple test run
          python test.py

      - name: Build and push Docker image
        # This step requires you to configure Docker credentials as secrets in your GitHub repository
        # DOCKER_USERNAME and DOCKER_PASSWORD
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ml-api:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ml-api:latest
      
      - name: Set up Kubeconfig
        # This step assumes you have a Kubernetes cluster and have saved its kubeconfig
        # as a secret named KUBE_CONFIG in your GitHub repository.
        # This step is commented out by default and needs to be configured.
        #
        # run: |
        #   mkdir -p ~/.kube
        #   echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      - name: Deploy to Kubernetes
        # This step will only work after a kubeconfig is set up.
        #
        # run: |
        #   kubectl apply -f deployment.yaml
        #   kubectl apply -f service.yaml
        #
        run: echo "Skipping deployment step. Please uncomment and configure with your Kubeconfig secret."
